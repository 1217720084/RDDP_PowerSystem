# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: testsvc.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import service as _service
from google.protobuf import service_reflection
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='testsvc.proto',
  package='',
  syntax='proto3',
  serialized_options=_b('\210\001\001\220\001\001'),
  serialized_pb=_b('\n\rtestsvc.proto\"%\n\x0b\x42inaryOpReq\x12\n\n\x02i1\x18\x01 \x01(\x03\x12\n\n\x02i2\x18\x02 \x01(\x03\"\x1e\n\x0c\x42inaryOpResp\x12\x0e\n\x06result\x18\x01 \x01(\x03\x32R\n\x08TestMath\x12\"\n\x03Mul\x12\x0c.BinaryOpReq\x1a\r.BinaryOpResp\x12\"\n\x03\x41\x64\x64\x12\x0c.BinaryOpReq\x1a\r.BinaryOpRespB\x06\x88\x01\x01\x90\x01\x01\x62\x06proto3')
)




_BINARYOPREQ = _descriptor.Descriptor(
  name='BinaryOpReq',
  full_name='BinaryOpReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='i1', full_name='BinaryOpReq.i1', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='i2', full_name='BinaryOpReq.i2', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=17,
  serialized_end=54,
)


_BINARYOPRESP = _descriptor.Descriptor(
  name='BinaryOpResp',
  full_name='BinaryOpResp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='result', full_name='BinaryOpResp.result', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=56,
  serialized_end=86,
)

DESCRIPTOR.message_types_by_name['BinaryOpReq'] = _BINARYOPREQ
DESCRIPTOR.message_types_by_name['BinaryOpResp'] = _BINARYOPRESP
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

BinaryOpReq = _reflection.GeneratedProtocolMessageType('BinaryOpReq', (_message.Message,), {
  'DESCRIPTOR' : _BINARYOPREQ,
  '__module__' : 'testsvc_pb2'
  # @@protoc_insertion_point(class_scope:BinaryOpReq)
  })
_sym_db.RegisterMessage(BinaryOpReq)

BinaryOpResp = _reflection.GeneratedProtocolMessageType('BinaryOpResp', (_message.Message,), {
  'DESCRIPTOR' : _BINARYOPRESP,
  '__module__' : 'testsvc_pb2'
  # @@protoc_insertion_point(class_scope:BinaryOpResp)
  })
_sym_db.RegisterMessage(BinaryOpResp)


DESCRIPTOR._options = None

_TESTMATH = _descriptor.ServiceDescriptor(
  name='TestMath',
  full_name='TestMath',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=88,
  serialized_end=170,
  methods=[
  _descriptor.MethodDescriptor(
    name='Mul',
    full_name='TestMath.Mul',
    index=0,
    containing_service=None,
    input_type=_BINARYOPREQ,
    output_type=_BINARYOPRESP,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='Add',
    full_name='TestMath.Add',
    index=1,
    containing_service=None,
    input_type=_BINARYOPREQ,
    output_type=_BINARYOPRESP,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_TESTMATH)

DESCRIPTOR.services_by_name['TestMath'] = _TESTMATH

TestMath = service_reflection.GeneratedServiceType('TestMath', (_service.Service,), dict(
  DESCRIPTOR = _TESTMATH,
  __module__ = 'testsvc_pb2'
  ))

TestMath_Stub = service_reflection.GeneratedServiceStubType('TestMath_Stub', (TestMath,), dict(
  DESCRIPTOR = _TESTMATH,
  __module__ = 'testsvc_pb2'
  ))


# @@protoc_insertion_point(module_scope)
